package br.com.iborba.gerenciadorFinanceiro.domain;

import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import br.com.iborba.gerenciadorFinanceiro.domain.exceptions.ValidationException;

class UserTest {

	@Test
	void createUser_ShouldInstantiateClass_WhenParametersAreFilled() throws ValidationException {
		// Arrange
		long id = 0L;
		String name = "Igor Borba";
		String email = "igor@hotmail.com";
		String password = "123456";
		
		// Act
		User user1 = new User(id, name, email, password);
		
		// Assert
		Assertions.assertEquals(0L, user1.getId());
		Assertions.assertEquals("Igor Borba", user1.getName());
		Assertions.assertEquals("igor@hotmail.com", user1.getEmail());
		Assertions.assertEquals("123456", user1.getPassword());
	}
	
	@Test
	void nullFields_ShouldThrowsValidationException_WhenParameterAreNull_ThenDisplaysMessage() throws ValidationException {
		// Arrange
		Long id = null;
		String name = null, 
			   email = null, 
			   password = null;
		
		// Assert
		Assertions.assertThrows(ValidationException.class, () -> new User(id, name, email, password), 
				"Review parameters and class's processing because should throw a Exception");
	}
	
	@Test
	void EmptyFields_ShouldThrowsValidationException_WhenParameterAreEmpty_ThenDisplaysMessage() throws ValidationException {
		// Arrange
		Long id = null;
		String name = "", 
			   email = "", 
			   password = "";
		
		// Assert
		Assertions.assertAll(
				() -> Assertions.assertEquals(User.class, new User(id, name, email, password))
		);
						
	}
}
